haitaton:
  ad:
    filter:
      use: ${HAITATON_USE_AD_FILTER:false}
      # List of allowed groups, seperated by ;
      allowed-groups: ${HAITATON_ALLOWED_AD_GROUPS:}
  allu:
    baseUrl: ${ALLU_BASEURL:/}
    concurrentUploads: ${ALLU_CONCURRENT_UPLOADS:1}
    insecure: ${ALLU_INSECURE:false}
    password: ${ALLU_PASSWORD:fake_password}
    updateInitialDelayMilliSeconds: ${ALLU_UPDATE_INITIAL_DELAY:60000}
    updateIntervalMilliSeconds: ${ALLU_UPDATE_INTERVAL:60000}
    username: ${ALLU_USERNAME:fake_user}
    # By default, run every day at 22:12:28 (Helsinki time).
    eventDeleteCron: ${HAITATON_ALLU_EVENT_DELETE_CRON:28 12 22 * * *}
    # By default, delete events older than 90 days.
    eventDeleteExpirationDays: ${HAITATON_ALLU_EVENT_DELETE_EXPIRATION_DAYS:90}
  api:
    disabled: ${HAITATON_API_DISABLED:false}
  azure:
    blob:
      connection-string: ${HAITATON_BLOB_CONNECTION_STRING:#{null}}
      decisions: ${HAITATON_BLOB_CONTAINER_DECISIONS:haitaton-paatokset-local}
      endpoint: https://${AZURE_STORAGE_ACCOUNT:}.blob.core.windows.net/
      hakemus-attachments: ${HAITATON_BLOB_CONTAINER_HAKEMUS_LIITTEET:haitaton-hakemusliitteet-local}
      hanke-attachments: ${HAITATON_BLOB_CONTAINER_HANKE_LIITTEET:haitaton-hankeliitteet-local}
  clamav:
    baseUrl: ${CLAMAV_BASE_URL:http://localhost:3030}
  cors:
    allowedOrigins: ${HAITATON_CORS_ALLOWED_ORIGINS:http://localhost:3001}
  email:
    baseUrl: ${HAITATON_EMAIL_BASEURL:http://localhost:3001}
    # For non-prod envs, send filter should be used to send only in allowed addresses.
    filter:
      # List of allowed addresses, separated by ;
      # The addresses allow for *-wildcards.
      # The allow list used in test environments, so the email server won't try
      # to send emails to made-up addresses.
      allow-list: ${HAITATON_EMAIL_FILTER_ALLOW_LIST:haitaton@test.com}
      use: ${HAITATON_EMAIL_FILTER_USE:true}
    from: ${HAITATON_EMAIL_FROM:Haitaton <noreply.haitaton@hel.fi>}
    # Disable endpoints that are e.g. in development and should not be in production.
  features:
    hanke-editing: ${HAITATON_FEATURE_HANKE_EDITING:false}
    hanke-completion: ${HAITATON_FEATURE_HANKE_COMPLETION:false}
  gdpr:
    # GDPR API is disabled by default for tests and local running.
    # Spring Security will otherwise try to call the issuer's openid-configuration URL,
    # which will fail, unless the developer has also started profile-gdpr-api-tester.
    disabled: ${HAITATON_GDPR_DISABLED:false}
    # Audience and issuer are the same for GDPR API and other APIs in cloud environments.
    # They are only different in local development, where GDPR queries come from the tester.
    audience: ${HAITATON_OAUTH2_AUDIENCE:haitaton-api-dev}
    issuer: ${HAITATON_OAUTH2_ISSUER:http://gdpr-api-tester:8888/}
    delete-scope: gdprdelete
    query-scope: gdprquery
  hanke:
    completions:
      max-per-run: ${HAITATON_COMPLETIONS_PER_RUN:250}
      # By default, run every day at 18:26:41 (Helsinki time).
      cron: ${HAITATON_COMPLETIONS_CRON:41 26 18 * * *}
      # By default, run every day at 20:32:38 (Helsinki time).
      deletionCron: ${HAITATON_COMPLETIONS_DELETE_CRON:38 32 20 * * *}
      # By default, run every day at 19:17:21 (Helsinki time).
      reminderCron: ${HAITATON_COMPLETIONS_REMINDER_CRON:21 17 19 * * *}
      # By default, run every day at 20:03:53 (Helsinki time).
      deletionReminderCron: ${HAITATON_COMPLETIONS_DELETE_REMINDER_CRON:53 03 20 * * *}
      # By default, run every day at 17:53:27 (Helsinki time).
      draftCompletionCron: ${HAITATON_COMPLETIONS_DRAFT_CRON:27 53 17 * * *}
  map-grid:
    cell-size-meters: 1000
    origin-x: 25486422.0
    origin-y: 6643836.0
    max-x: 25515423.0
    max-y: 6687837.0
    # Cache repopulation runs every 5 minutes (300000ms)
    cache-repopulation-interval-ms: ${HAITATON_MAP_GRID_CACHE_INTERVAL:300000}
    # Initial delay of 30 seconds to allow application startup
    cache-initial-delay-ms: ${HAITATON_MAP_GRID_CACHE_INITIAL_DELAY:30000}
  map-service:
    capability-url: https://kartta.hel.fi/ws/geoserver/avoindata/wms?REQUEST=GetCapabilities&SERVICE=WMS
  profiili-api:
    graph-ql-url: ${PROFIILI_GRAPHQL_URL:https://profile-api.test.hel.ninja/graphql/}
    audience: ${PROFIILI_AUDIENCE:profile-api-test}
  security:
    user-session:
      cleanup:
        # By default, run every five minutes.
        interval: ${HAITATON_USER_SESSION_CLEANUP_INTERVAL:300000}
  testdata:
    enabled: ${HAITATON_TESTDATA_ENABLED:false}  # For dev and test environments, enable the testdata controller for resetting data

info:
  java-vendor: ${java.specification.vendor}
  java-version: ${java.specification.version}

logging:
  level:
    liquibase: INFO

# Actuator Management for Kubernetes. Separate HTTP port for probes.
management:
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  server:
    port: 8081

sentry:
  # DSN is a public detail. When it is empty, Sentry is not configured or enabled.
  # The real DSN: https://47ff7aa8e32fa0f48fe211771c537299@o4508126783602688.ingest.de.sentry.io/4509236728627280
  dsn: ${HAITATON_SENTRY_DSN:}
  environment: ${HAITATON_SENTRY_ENVIRONMENT:dev}
  # Only exceptions that have not been handled by exception resolvers with higher order are sent to Sentry.
  exception-resolver-order: 2147483647
  logs:
    enabled: ${HAITATON_SENTRY_LOGGING_ENABLED:false}
  logging:
    enabled: ${HAITATON_SENTRY_LOGGING_ENABLED:false}
    minimum-breadcrumb-level: info
    minimum-event-level: error

server:
  # Increase the header size to accommodate the Helsinki staff JWT with all of their AD groups.
  # https://docs.spring.io/spring-boot/appendix/application-properties/index.html#application-properties.server.server.max-http-request-header-size
  max-http-request-header-size: 64KB
  forward-headers-strategy: FRAMEWORK

spring:
  datasource:
    password: ${HAITATON_PASSWORD:haitaton}
    url: jdbc:postgresql://${HAITATON_HOST:localhost}:${HAITATON_PORT:5432}/${HAITATON_DATABASE:haitaton}${HAITATON_DATABASE_PARAMS:}
    username: ${HAITATON_USER:haitaton_user}
  jpa:
    hibernate:
      naming:
        # Make database field names to match the entity member names
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: false
    # This is the default. Left here to make it easy to enable while developing.
    show-sql: false
  liquibase:
    password: ${HAITATON_PASSWORD:haitaton}
    url: jdbc:postgresql://${HAITATON_HOST:localhost}:${HAITATON_PORT:5432}/${HAITATON_DATABASE:haitaton}${HAITATON_DATABASE_PARAMS:}
    user: ${HAITATON_USER:haitaton_user}
  mail:
    host: ${MAIL_SENDER_HOST:localhost}
    port: ${MAIL_SENDER_PORT:2525}
    properties:
      mail:
        debug: ${MAIL_SENDER_DEBUG:false}
        smtp:
          auth: ${MAIL_SENDER_AUTH:false}
          starttls:
            enable: ${MAIL_SENDER_STARTTLS_ENABLE:true}
        transport:
          protocol: ${MAIL_SENDER_PROTOCOL:smtp}
  mvc:
    format:
      # REST API request parameter parsing to work for date values
      date: yyyy-MM-dd
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${HAITATON_OAUTH2_ISSUER:https://tunnistus.test.hel.ninja/auth/realms/helsinki-tunnistus}
          audiences: ${HAITATON_OAUTH2_AUDIENCE:haitaton-api-dev}
    filter:
      order: -100
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 101MB

# Configuration for Swagger UI & OpenAPI documentation. Default is access from behind reverse proxy.
springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    config-url: ${HAITATON_SWAGGER_PATH_PREFIX:/api/v3}/api-docs/swagger-config
    url: ${HAITATON_SWAGGER_PATH_PREFIX:/api/v3}/api-docs
  trim-kotlin-indent: true
